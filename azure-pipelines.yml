stages:
- stage: init
  jobs:
  - job: initcache
    strategy:
      matrix:
        linux:
          VM_IMAGE: ubuntu-16.04
        windows:  
          VM_IMAGE: vs2017-win2016
        macOS:
          VM_IMAGE: macOS-10.13
    pool:
      vmImage: $(VM_IMAGE)
    variables:  
      YARN_CACHE_FOLDER: $(Pipeline.Workspace)/yarn-cache
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: 10.x
      displayName: 'Install Node 10.x'

    - bash: |
        export NPM_CACHE_DIR="$(npm config get cache)"
        echo "##vso[task.setvariable variable=NPM_CACHE_DIR]$NPM_CACHE_DIR"

    - script: npm ci

    - task: PublishPipelineArtifact@0
      inputs:
        targetPath: '$(NPM_CACHE_DIR)'
        artifactName: 'npm-$(Agent.OS)'
      displayName: Publish npm cache artifact

    # - script: yarn --frozen-lockfile
    #   displayName: 'Run yarn'

    # - task: PublishPipelineArtifact@0
    #   inputs:
    #     targetPath: '$(YARN_CACHE_FOLDER)'
    #     artifactName: 'yarn-$(Agent.OS)'
    #   displayName: Publish yarn cache artifact

- stage: test
  jobs:
  - job: testcache
    strategy:
      matrix:
        linux:
          VM_IMAGE: ubuntu-16.04
        windows:  
          VM_IMAGE: vs2017-win2016
        macOS:
          VM_IMAGE: macOS-10.13
    pool:
      vmImage: $(VM_IMAGE)
    variables:  
      YARN_CACHE_FOLDER: $(Pipeline.Workspace)/yarn-cache
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: 10.x
      displayName: 'Install Node 10.x'

    - bash: |
        export NPM_CACHE_DIR="$(npm config get cache)"
        echo "##vso[task.setvariable variable=NPM_CACHE_DIR]$NPM_CACHE_DIR"

    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: 'npm-$(Agent.OS)'
        targetPath: '$(NPM_CACHE_DIR)'
      displayName: Download npm cache

    - script: npm ci --prefer-offline

    #- bash: yarn config set registry https://registry.npmjs.org/ --global

    # - task: DownloadPipelineArtifact@1
    #   inputs:
    #     artifactName: 'yarn-$(Agent.OS)'
    #     targetPath: '$(YARN_CACHE_FOLDER)'
    #   displayName: Download yarn cache
    # - script: yarn --frozen-lockfile --prefer-offline
    #   displayName: 'Run yarn'
